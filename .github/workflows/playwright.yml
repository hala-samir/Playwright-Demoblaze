name: Playwright Tests
# this workflow will be run on pushing and on pulling code to the main branch
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  playwright: #job name
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK }} #slack config
    container:
      image: ubuntu:latest
      options: --user root

    steps:
      #actions
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      #step0: install curl
      - name: Install curl
        run: sudo apt-get update && sudo apt-get install -y curl

        #step 1 maven installation
      - name: Install maven
        run: mvn install

        #step2 run the tests
      - name: Run tests
        run: mvn test

       #step3 generate the extent report
      - name: Upload Extent Report
        uses: actions/upload-artifact@v3
        with:
          name: extent-report
          path: src/test/reports/HTML-ExecutionReport.html

        #step 4 send notification to slack channel "testingExecutionResult"
      - name: Upload Extent Report to Slack
        if: always()  # Ensure this runs even if tests fail
        run: |
          # Ensure the Extent report exists
          if [ -f "src/test/reports/HTML-ExecutionReport.html" ]; then
            # Upload the Extent HTML report to Slack
            curl -F file=@src/test/reports/HTML-ExecutionReport.html \
                 -F "initial_comment=Playwright Tests completed. Here is the Extent Report." \
                 -F channels=${{ env.SLACK_CHANNEL }} \
                 -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
                 https://slack.com/api/files.upload
          else
            echo "Extent report not found. Skipping upload."
          fi